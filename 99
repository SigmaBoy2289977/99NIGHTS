local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Wait for game to load
if not game:IsLoaded() then
    local s = pcall(function()
        game.Loaded:Wait()
    end)
    if not s then repeat task.wait() until game:IsLoaded() end
end

-- Only support MM2
if game.PlaceId ~= 142823291 then return end

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
local Char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Hum = Char:FindFirstChildOfClass("Humanoid")
local Root = (Hum and Hum.RootPart) or Char:FindFirstChild("HumanoidRootPart") or Char:FindFirstChild("Torso") or Char:FindFirstChild("UpperTorso")

-- Initialize Rayfield
local Window = Rayfield:CreateWindow({
    Name = "MM2 Script",
    LoadingTitle = "MM2 Script by ScripterMrbacon",
    LoadingSubtitle = "Loading...",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "MM2Config"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
})

-- Main Tab
local MainTab = Window:CreateTab("Main", 4483345998)
local PlayerTab = Window:CreateTab("Player", 4335489011)

-- ESP Player (Role&Name)
MainTab:CreateToggle({
    Name = "Esp Player (Role&Name)",
    CurrentValue = false,
    Flag = "ESP_ENABLED",
    Callback = function(Value)
        getgenv().ESP_ENABLED = Value
        
        local roleColors = {
            Murderer = Color3.fromRGB(255, 0, 0),
            Sheriff = Color3.fromRGB(0, 0, 255),
            Hero = Color3.fromRGB(255, 255, 0),
            Innocent = Color3.fromRGB(0, 255, 0),
            Default = Color3.fromRGB(200, 200, 200)
        }
        
        local function clearESP()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    local head = player.Character:FindFirstChild("Head")
                    if head then
                        local esp = head:FindFirstChild("RoleESP")
                        if esp then esp:Destroy() end
                    end
                    local hl = player.Character:FindFirstChild("RoleHighlight")
                    if hl then hl:Destroy() end
                end
            end
        end
        
        local function getRoles()
            local data = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
            local roles = {}
            for plr, plrData in pairs(data) do
                if not plrData.Dead then
                    roles[plr] = plrData.Role
                end
            end
            return roles
        end
        
        local function applyHighlight(character, role)
            local existing = character:FindFirstChild("RoleHighlight")
            if existing then existing:Destroy() end
            local hl = Instance.new("Highlight")
            hl.Name = "RoleHighlight"
            hl.FillColor = roleColors[role] or roleColors.Default
            hl.OutlineColor = Color3.new(1, 1, 1)
            hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            hl.FillTransparency = 0.4
            hl.OutlineTransparency = 0
            hl.Parent = character
        end
        
        local function createBillboard(head, role, playerName)
            local esp = Instance.new("BillboardGui")
            esp.Name = "RoleESP"
            esp.Adornee = head
            esp.Size = UDim2.new(5, 0, 5, 0)
            esp.AlwaysOnTop = true
            esp.Parent = head
            
            local label = Instance.new("TextLabel")
            label.Name = "RoleLabel"
            label.Parent = esp
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundTransparency = 1
            label.TextStrokeTransparency = 0
            label.TextSize = 14
            label.TextColor3 = roleColors[role] or roleColors.Default
            label.Font = Enum.Font.FredokaOne
            label.Text = ("Role: %s • Name: %s"):format(role, playerName)
        end
        
        local function updateESP()
            local roles = getRoles()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    local head = player.Character:FindFirstChild("Head")
                    if head then
                        local role = roles[player.Name] or "Default"
                        if not head:FindFirstChild("RoleESP") then
                            createBillboard(head, role, player.Name)
                        else
                            local label = head.RoleESP:FindFirstChild("RoleLabel")
                            if label then
                                label.Text = ("Role: %s • Name: %s"):format(role, player.Name)
                                label.TextColor3 = roleColors[role] or roleColors.Default
                            end
                        end
                        
                        local light = player.Character:FindFirstChild("RoleHighlight")
                        if not light then
                            applyHighlight(player.Character, role)
                        else
                            light.FillColor = roleColors[role] or roleColors.Default
                        end
                    end
                end
            end
        end
        
        if Value then
            local updateLoop
            updateLoop = game:GetService("RunService").Heartbeat:Connect(function()
                if not getgenv().ESP_ENABLED then
                    updateLoop:Disconnect()
                    clearESP()
                    return
                end
                pcall(updateESP)
            end)
        else
            clearESP()
        end
    end
})

-- ESP Gun
MainTab:CreateToggle({
    Name = "Esp Gun",
    CurrentValue = false,
    Flag = "GunEsp",
    Callback = function(Value)
        getgenv().GunEsp = Value
        
        local function clearGunESP()
            local gun = Workspace:FindFirstChild("GunDrop", true)
            if gun then
                if gun:FindFirstChild("GunHighlight") then
                    gun:FindFirstChild("GunHighlight"):Destroy()
                end
                if gun:FindFirstChild("GunEsp") then
                    gun:FindFirstChild("GunEsp"):Destroy()
                end
            end
        end
        
        if not Value then
            clearGunESP()
            return
        end
        
        local updateLoop
        updateLoop = game:GetService("RunService").Heartbeat:Connect(function()
            if not getgenv().GunEsp then
                updateLoop:Disconnect()
                clearGunESP()
                return
            end
            
            local gun = Workspace:FindFirstChild("GunDrop", true)
            if gun then
                if not gun:FindFirstChild("GunHighlight") then
                    local gunh = Instance.new("Highlight", gun)
                    gunh.Name = "GunHighlight"
                    gunh.FillColor = Color3.new(1, 1, 0)
                    gunh.OutlineColor = Color3.new(1, 1, 1)
                    gunh.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                    gunh.FillTransparency = 0.4
                    gunh.OutlineTransparency = 0.5
                end
                
                if not gun:FindFirstChild("GunEsp") then
                    local esp = Instance.new("BillboardGui")
                    esp.Name = "GunEsp"
                    esp.Adornee = gun
                    esp.Size = UDim2.new(5, 0, 5, 0)
                    esp.AlwaysOnTop = true
                    esp.Parent = gun
                    
                    local text = Instance.new("TextLabel", esp)
                    text.Name = "GunLabel"
                    text.Size = UDim2.new(1, 0, 1, 0)
                    text.BackgroundTransparency = 1
                    text.TextStrokeTransparency = 0
                    text.TextColor3 = Color3.fromRGB(255, 255, 0)
                    text.Font = Enum.Font.FredokaOne
                    text.TextSize = 16
                    text.Text = "Gun Drop"
                end
            end
        end)
    end
})

-- Fling Function
PlayerTab:CreateDropdown({
    Name = "Fling Player",
    Options = {},
    CurrentOption = "",
    Flag = "FlingPlayer",
    Callback = function(Option)
        local TargetPlayer = Players:FindFirstChild(Option)
        if not TargetPlayer then return end
        
        if not (Char and Hum and Root) then return end
        local TCharacter = TargetPlayer.Character
        if not TCharacter then return end
        
        local THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
        local TRootPart = THumanoid and THumanoid.RootPart
        local THead = TCharacter:FindFirstChild("Head")
        local Accessory = TCharacter:FindFirstChildOfClass("Accessory")
        local Handle = Accessory and Accessory:FindFirstChild("Handle")
        
        getgenv().OldPos = Root.CFrame
        
        repeat task.wait()
            Workspace.CurrentCamera.CameraSubject = THead or Handle or THumanoid
        until Workspace.CurrentCamera.CameraSubject == THead or Handle or THumanoid
        
        local function FPos(BasePart, Pos, Ang)
            local targetCF = CFrame.new(BasePart.Position) * Pos * Ang
            Root.CFrame = targetCF
            Char:SetPrimaryPartCFrame(targetCF)
            Root.Velocity = Vector3.new(9e7, 9e8, 9e7)
            Root.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
        end
        
        local function SFBasePart(BasePart)
            local start = tick()
            local angle = 0
            getgenv().timeout = getgenv().timeout or 2.5
            repeat
                if Root and THumanoid then
                    angle += 100
                    for _, offset in ipairs{CFrame.new(0, 1.5, 0),CFrame.new(0, -1.5, 0),CFrame.new(2.25, 1.5, -2.25),CFrame.new(-2.25, -1.5, 2.25)} do
                        FPos(BasePart, offset + THumanoid.MoveDirection, CFrame.Angles(math.rad(angle), 0, 0))
                        task.wait()
                    end
                end
            until BasePart.Velocity.Magnitude > 500 or tick() - start > getgenv().timeout
        end
        
        local BV = Instance.new("BodyVelocity")
        BV.Name = "SeYyyVel!?"
        BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
        BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        BV.Parent = Root
        
        Hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        local target = TRootPart or THead or Handle
        if target then SFBasePart(target) end
        BV:Destroy()
        Hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        
        repeat task.wait()
            Workspace.CurrentCamera.CameraSubject = Hum
        until Workspace.CurrentCamera.CameraSubject == Hum
        
        repeat
            local cf = getgenv().OldPos * CFrame.new(0, .5, 0)
            Root.CFrame = cf
            Char:SetPrimaryPartCFrame(cf)
            Hum:ChangeState("GettingUp")
            for _, part in ipairs(Char:GetChildren()) do
                if part:IsA("BasePart") then
                    part.Velocity, part.RotVelocity = Vector3.zero, Vector3.zero
                end
            end
            task.wait()
        until (Root.Position - getgenv().OldPos.p).Magnitude < 25
    end
})

-- Update player list for fling dropdown
local function updatePlayerList()
    local players = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(players, player.Name)
        end
    end
    Rayfield:UpdateDropdown("FlingPlayer", players)
end

-- Initial player list update
updatePlayerList()

-- Update player list when players join/leave
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)

-- Initialize
Rayfield:LoadConfiguration()
